@using Microsoft.AspNet.Identity
@using VacationManager.WEB.Extensions
@model VacationManager.WEB.Models.VacationViewModel
@{
    ViewBag.Title = "Home Page";
    string tt = "/User/Details?id=" + @User.Identity.GetUserIdGuid();
}
@*<link rel="stylesheet" href="~/Content/svg-calendar.css">*@
<link href="~/Content/css/js-year-calendar.min.css" rel="stylesheet" />
@*<div class="jumbotron">
    <script>
       $.ajax({
         url: "@tt",
         type: "GET",
         success: function (data) {
             console.log(data);
         }
       });
       </script>
       </div>*@
<div class="calendar" id="calendar"></div>

<div class="modal fade" id="event-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Event</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" name="event-index">
                <form class="form-horizontal">
                    <div class="form-group row">
                        <label for="event-name" class="col-sm-4 control-label">Name</label>
                        <div class="col-sm-8">
                            <input id="event-name" name="event-name" type="text" class="form-control">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="event-location" class="col-sm-4 control-label">Location</label>
                        <div class="col-sm-8">
                            <input id="event-location" name="event-location" type="text" class="form-control">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="min-date" class="col-sm-4 control-label">Dates</label>
                        <div class="col-sm-8">
                            <div class="input-group input-daterange" data-provide="datepicker">
                                <input id="min-date" name="event-start-date" type="text" class="form-control">
                                <div class="input-group-prepend input-group-append">
                                    <div class="input-group-text">to</div>
                                </div>
                                <input name="event-end-date" type="text" class="form-control">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="save-event">
                    Save
                </button>
            </div>
        </div>
    </div>
</div>
<div id="context-menu">
</div>
<div class="row">
    <div class="col-4">
        <hr />
        @using (Ajax.BeginForm("TakeVacation", "Vacation", new AjaxOptions { UpdateTargetId = "results", OnSuccess = "OnSuccess" }))
        {
            <div class="">
                <label for="from">From</label>
                <input type="text" id="from" name="DateStart">
            </div>
            <div class="">
                <label for="to">to</label>
                <input type="text" id="to" name="DateEnd">
            </div>
            <div class="">
                @Html.LabelFor(v => v.Description)
                @Html.EditorFor(v => v.Description)
            </div>
            <div class="">
                <input type="submit" value="Мне повезет!" />
            </div>
        }
        <div id="results"></div>
    </div>
    <div class="col-8">
        <hr />
        <div class="row justify-content-center">
            <div class="col-6">
                <table class="table table-sm">
                    <tbody>
                        <tr>
                            <td class="lvl-3"></td>
                            <td>Уже поздно</td>
                        </tr>
                        <tr>
                            <td class="lvl-2"></td>
                            <td>Испытай свою удачу</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-6">
                <table class="table table-sm">
                    <tbody>
                        <tr>
                            <td class="lvl-1"></td>
                            <td>Минимальные риски</td>
                        </tr>
                        <tr>
                            <td class="lvl-0"></td>
                            <td>Ты будешь первым</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script src="https://unpkg.com/popper.js@1.14.7/dist/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js"></script>
    <script src=@Url.Content("~/Scripts/js/js-year-calendar.min.js")></script>
    <script>
        function monthDiff(dateFrom, dateTo) {
            return dateTo.getMonth() - dateFrom.getMonth() +
                (12 * (dateTo.getFullYear() - dateFrom.getFullYear()));
        }

        $(function () {
            var dateFormat = "dd-MM-yy",
                from = $("#from")
                    .datepicker({
                        dateFormat: 'dd-MM-yy',
                        defaultDate: "+1w",
                        changeMonth: true,
                        numberOfMonths: 2
                    })
                    .on("change", function () {
                        console.log("Selected date: " + getDate(this) + "; input current value: " + this.value);
                        index = monthDiff(new Date(), getDate(this));
                        calendarBase.svg("destroy");
                        calendarBase.svg(drawCalendar);
                        console.log(monthDiff(new Date(), getDate(this)));
                        to.datepicker("option", "minDate", getDate(this));
                    }),
                to = $("#to").datepicker({
                    dateFormat: 'dd-MM-yy',
                    defaultDate: "+1w",
                    changeMonth: true,
                    numberOfMonths: 2
                })
                    .on("change", function () {
                        from.datepicker("option", "maxDate", getDate(this));
                    });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });
    </script>
    <script>
        function editEvent(event) {
            $('#event-modal input[name="event-index"]').val(event ? event.id : '');
            $('#event-modal input[name="event-name"]').val(event ? event.name : '');
            $('#event-modal input[name="event-location"]').val(event ? event.location : '');
            $('#event-modal input[name="event-start-date"]').datepicker('update', event ? event.startDate : '');
            $('#event-modal input[name="event-end-date"]').datepicker('update', event ? event.endDate : '');
            $('#event-modal').modal();
        }

        function deleteEvent(event) {
            var dataSource = calendar.getDataSource();

            calendar.setDataSource(dataSource.filter(item => item.id == event.id));
        }

        function saveEvent() {
            var event = {
                id: $('#event-modal input[name="event-index"]').val(),
                name: $('#event-modal input[name="event-name"]').val(),
                location: $('#event-modal input[name="event-location"]').val(),
                startDate: $('#event-modal input[name="event-start-date"]').datepicker('getDate'),
                endDate: $('#event-modal input[name="event-end-date"]').datepicker('getDate')
            }

            var dataSource = calendar.getDataSource();

            if (event.id) {
                for (var i in dataSource) {
                    if (dataSource[i].id == event.id) {
                        dataSource[i].name = event.name;
                        dataSource[i].location = event.location;
                        dataSource[i].startDate = event.startDate;
                        dataSource[i].endDate = event.endDate;
                    }
                }
            }
            else {
                var newId = 0;
                for (var i in dataSource) {
                    if (dataSource[i].id > newId) {
                        newId = dataSource[i].id;
                    }
                }

                newId++;
                event.id = newId;

                dataSource.push(event);
            }

            calendar.setDataSource(dataSource);
            $('#event-modal').modal('hide');
        }

        $('#save-event').click(function () {
            saveEvent();
        })
    </script>
    <script>
        var currentYear = new Date().getFullYear();
        const calendar = new Calendar('.calendar', {
            enableContextMenu: true,
            enableRangeSelection: true,
            contextMenuItems: [
                {
                    text: 'Update',
                    click: editEvent
                },
                {
                    text: 'Delete',
                    click: deleteEvent
                }
            ],

            selectRange: function (e) {
                editEvent({ startDate: e.startDate, endDate: e.endDate });
            },
            mouseOnDay: function (e) {
                if (e.events.length > 0) {
                    var content = '';

                    for (var i in e.events) {
                        content += '<div class="event-tooltip-content">'
                            + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '</div>'
                            + '<div class="event-location">' + e.events[i].location + '</div>'
                            + '</div>';
                    }

                    $(e.element).popover({
                        trigger: 'manual',
                        container: 'body',
                        html: true,
                        content: content
                    });

                    $(e.element).popover('show');
                }
            },
            mouseOutDay: function (e) {
                if (e.events.length > 0) {
                    $(e.element).popover('hide');
                }
            },
            dayContextMenu: function (e) {
                $(e.element).popover('hide');
            },
            dataSource: [
                {
                    id: 0,
                    name: 'Google I/O',
                    location: 'San Francisco, CA',
                    startDate: new Date(currentYear, 4, 28),
                    endDate: new Date(currentYear, 4, 29)
                },
                {
                    id: 1,
                    name: 'Microsoft Convergence',
                    location: 'New Orleans, LA',
                    startDate: new Date(currentYear, 2, 16),
                    endDate: new Date(currentYear, 2, 19)
                }
            ],
        });
                        //$(document).ready(function () {});
    </script>
}
